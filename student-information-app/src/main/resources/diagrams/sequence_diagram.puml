@startuml
actor Teacher

Teacher -> CourseService: saveCourse(course, teachers)
CourseService -> Database: save(course)
alt success
    Database -> CourseService: course saved
    CourseService -> Teacher: Confirm Changes
else error
    Database -> CourseService: error details
    CourseService -> Teacher: Display Error
end

Teacher -> CourseService: updateCourse(courseId, course, teachers)
CourseService -> Database: update(course)
alt success
    Database -> CourseService: course updated
    CourseService -> Teacher: Confirm Changes
else error
    Database -> CourseService: error details
    CourseService -> Teacher: Display Error
end

Teacher -> CourseService: deleteCourse(courseId)
CourseService -> Database: delete(course)
alt success
    Database -> CourseService: course deleted
    CourseService -> Teacher: Confirm Changes
else error
    Database -> CourseService: error details
    CourseService -> Teacher: Display Error
end

Teacher -> CourseService: getAllCourses()
CourseService -> Database: fetch all courses
Database -> CourseService: list of courses
CourseService -> Teacher: return all courses

Teacher -> CourseService: getCourseById(courseId)
CourseService -> Database: fetch course by ID
alt found
    Database -> CourseService: return course
    CourseService -> Teacher: return course
else not found
    Database -> CourseService: course not found
    CourseService -> Teacher: course not found
end

@enduml
